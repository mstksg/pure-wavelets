-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/mstksg/pure-wavelets#readme</a>
@package pure-wavelets
@version 0.1.0.0

module Numeric.Wavelet
data WaveDec :: (Type -> Type) -> Nat -> Type -> Type
[WDZ] :: {_wdDetailZ :: !a, _wdApprox :: !a} -> WaveDec v 0 a
[WDS] :: {_wdDetailS :: !Vector v (2 ^ (n + 1)) a, _wdNext :: !WaveDec v n a} -> WaveDec v (n + 1) a
_wdDetail :: Vector v a => WaveDec v n a -> Vector v (2 ^ n) a
testDec :: WaveDec Vector 4 Double
flattenWD :: Vector v a => WaveDec v n a -> Vector v (2 ^ (n + 1)) a
haar :: forall v n a. (Vector v a, KnownNat n, Fractional a) => Vector v (2 ^ (n + 1)) a -> WaveDec v n a
unHaar :: (Vector v a, KnownNat n, Num a) => WaveDec v n a -> Vector v (2 ^ (n + 1)) a
haarPass :: (Vector v a, KnownNat n, Fractional a) => Vector v (2 ^ (n + 1)) a -> (Vector v (2 ^ n) a, Vector v (2 ^ n) a)
unhaarPass :: (Vector v a, KnownNat n, Num a) => Vector v (2 ^ n) a -> Vector v (2 ^ n) a -> Vector v (2 ^ (n + 1)) a
instance (GHC.Show.Show (v a), GHC.Show.Show a) => GHC.Show.Show (Numeric.Wavelet.WaveDec v n a)
