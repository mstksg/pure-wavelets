-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/mstksg/pure-wavelets#readme</a>
@package wavelets
@version 0.1.0.0

module Numeric.Wavelet.Discrete
data DWD :: (Type -> Type) -> Nat -> Type -> Type
[DWDZ] :: {_dwdDetailZ :: !a, _dwdApprox :: !a} -> DWD v 0 a
[DWDS] :: {_dwdDetailS :: !Vector v (2 ^ (n + 1)) a, _dwdNext :: !DWD v n a} -> DWD v (n + 1) a
dwdApprox :: DWD v n a -> a
dwdDetail :: Vector v a => DWD v n a -> Vector v (2 ^ n) a
flattenDWD :: Vector v a => DWD v n a -> Vector v (2 ^ (n + 1)) a
denseDWD :: forall v n a. (KnownNat n, Vector v a) => DWD v n a -> Vector (n + 1) (Vector v (2 ^ n) a)
haar :: forall v n a. (Vector v a, KnownNat n, Fractional a) => Vector v (2 ^ (n + 1)) a -> DWD v n a
unHaar :: (Vector v a, KnownNat n, Num a) => DWD v n a -> Vector v (2 ^ (n + 1)) a
instance (GHC.Show.Show (v a), GHC.Show.Show a) => GHC.Show.Show (Numeric.Wavelet.Discrete.DWD v n a)

module Numeric.Wavelet.Internal.FFT
fft :: (FFTWReal a, Vector v (Complex a)) => Vector v n (Complex a) -> Vector v n (Complex a)
ifft :: (FFTWReal a, Vector v (Complex a)) => Vector v n (Complex a) -> Vector v n (Complex a)

module Numeric.Wavelet.Continuous
newtype CWD v n m a
CWD :: Vector m (CWDLine v n a) -> CWD v n m a
[cwdLines] :: CWD v n m a -> Vector m (CWDLine v n a)
data CWDLine v n a
CWDLine :: Vector v n a -> Finite ((n `Div` 2) + 1) -> a -> Finite ((n `Div` 2) + 1) -> CWDLine v n a
[cwdlData] :: CWDLine v n a -> Vector v n a

-- | Scale factor, in number of ticks.
[cwdlScale] :: CWDLine v n a -> Finite ((n `Div` 2) + 1)

-- | The frequency associated with this scale, in inverse tick
[cwdlFreq] :: CWDLine v n a -> a

-- | How many items are <i>outside</i> of the Cone of Influence, on each
--   side.
[cwdlCoI] :: CWDLine v n a -> Finite ((n `Div` 2) + 1)

-- | Morelet continuous wavelet decomposition.
cwd :: forall v n m a. (Vector v a, Vector v (Complex a), KnownNat n, KnownNat m, FFTWReal a, 1 <= n) => AWavelet v a -> Finite ((n `Div` 2) + 1) -> Finite ((n `Div` 2) + 1) -> Vector v n a -> CWD v n m a

-- | Analytical Wavelet
data AWavelet v a
AW :: (a -> v a) -> a -> a -> AWavelet v a

-- | generate a vector within awRange with a given dt
[awVector] :: AWavelet v a -> a -> v a
[awFreq] :: AWavelet v a -> a
[awRange] :: AWavelet v a -> a
morlet :: (Vector v a, RealFloat a) => a -> AWavelet v a
meyer :: (Vector v a, RealFloat a) => AWavelet v a
instance (GHC.Show.Show a, GHC.Show.Show (v a)) => GHC.Show.Show (Numeric.Wavelet.Continuous.CWD v n m a)
instance (GHC.Show.Show a, GHC.Show.Show (v a)) => GHC.Show.Show (Numeric.Wavelet.Continuous.CWDLine v n a)
