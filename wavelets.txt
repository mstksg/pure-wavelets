-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/mstksg/pure-wavelets#readme</a>
@package wavelets
@version 0.1.0.0

module Numeric.Wavelet.Discrete
data DWD :: (Type -> Type) -> Nat -> Type -> Type
[DWDZ] :: {_dwdDetailZ :: !a, _dwdApprox :: !a} -> DWD v 0 a
[DWDS] :: {_dwdDetailS :: !Vector v (2 ^ (n + 1)) a, _dwdNext :: !DWD v n a} -> DWD v (n + 1) a
dwdApprox :: DWD v n a -> a
dwdDetail :: Vector v a => DWD v n a -> Vector v (2 ^ n) a
flattenDWD :: Vector v a => DWD v n a -> Vector v (2 ^ (n + 1)) a
denseDWD :: forall v n a. (KnownNat n, Vector v a) => DWD v n a -> Vector (n + 1) (Vector v (2 ^ n) a)
haar :: forall v n a. (Vector v a, KnownNat n, Fractional a) => Vector v (2 ^ (n + 1)) a -> DWD v n a
unHaar :: (Vector v a, KnownNat n, Num a) => DWD v n a -> Vector v (2 ^ (n + 1)) a
instance (GHC.Show.Show (v a), GHC.Show.Show a) => GHC.Show.Show (Numeric.Wavelet.Discrete.DWD v n a)

module Numeric.Wavelet.Internal.FFT
fft :: (FFTWReal a, Vector v (Complex a)) => Vector v n (Complex a) -> Vector v n (Complex a)
ifft :: (FFTWReal a, Vector v (Complex a)) => Vector v n (Complex a) -> Vector v n (Complex a)

module Numeric.Wavelet.Continuous
newtype CWD v n m a b
CWD :: Vector m (CWDLine v n a b) -> CWD v n m a b
[cwdLines] :: CWD v n m a b -> Vector m (CWDLine v n a b)
mapCWD :: (Vector v b, Vector v c) => (b -> c) -> CWD v n m a b -> CWD v n m a c
data CWDLine v n a b
CWDLine :: Vector v n b -> Finite ((n `Div` 2) + 1) -> a -> Finite ((n `Div` 2) + 1) -> CWDLine v n a b
[cwdlData] :: CWDLine v n a b -> Vector v n b

-- | Scale factor, in number of ticks.
[cwdlScale] :: CWDLine v n a b -> Finite ((n `Div` 2) + 1)

-- | The frequency associated with this scale, in inverse tick
[cwdlFreq] :: CWDLine v n a b -> a

-- | How many items are <i>outside</i> of the Cone of Influence, on each
--   side.
[cwdlCoI] :: CWDLine v n a b -> Finite ((n `Div` 2) + 1)
mapCWDLine :: (Vector v b, Vector v c) => (b -> c) -> CWDLine v n a b -> CWDLine v n a c
data CWDOpts n
CWDO :: LNorm -> Finite ((n `Div` 2) + 1) -> Finite ((n `Div` 2) + 1) -> CWDOpts n

-- | wavelet normalization
[cwdoNorm] :: CWDOpts n -> LNorm

-- | min scale (period)
[cwdoMinScale] :: CWDOpts n -> Finite ((n `Div` 2) + 1)

-- | max scale (period)
[cwdoMaxScale] :: CWDOpts n -> Finite ((n `Div` 2) + 1)
defaultCWDO :: KnownNat n => CWDOpts n

-- | <a>cwd</a> for complex-valued analytic wavelets.
cwd :: forall v n m a b. (Vector v (Complex b), KnownNat n, KnownNat m, FFTWReal b, 1 <= n, RealFloat a) => AWavelet v a (Complex b) -> CWDOpts n -> Vector v n (Complex b) -> CWD v n m a (Complex b)

-- | <a>cwd</a> for real-valued analytic wavelets.
cwdReal :: forall v n m a b. (Vector v b, Vector v (Complex b), KnownNat n, KnownNat m, FFTWReal b, 1 <= n, RealFloat a) => AWavelet v a b -> CWDOpts n -> Vector v n b -> CWD v n m a b

-- | Analytical Wavelet
data AWavelet v a b
AW :: (a -> v b) -> a -> a -> AWavelet v a b

-- | generate a vector within awRange with a given dt
[awVector] :: AWavelet v a b -> a -> v b

-- | Dominant frequency component
[awFreq] :: AWavelet v a b -> a

-- | range away from zero outside of which wavelet can be considered
--   negligible
[awRange] :: AWavelet v a b -> a
mapAWavelet :: (Vector v b, Vector v c) => (b -> c) -> AWavelet v a b -> AWavelet v a c
morlet :: (Vector v (Complex a), RealFloat a) => a -> AWavelet v a (Complex a)
morletFunc :: RealFloat a => a -> a -> Complex a
meyer :: (Vector v a, RealFloat a) => AWavelet v a a
meyerFunc :: RealFloat a => a -> a
instance GHC.Base.Functor v => GHC.Base.Functor (Numeric.Wavelet.Continuous.AWavelet v a)
instance GHC.Generics.Generic (Numeric.Wavelet.Continuous.CWDOpts n)
instance GHC.Classes.Ord (Numeric.Wavelet.Continuous.CWDOpts n)
instance GHC.Classes.Eq (Numeric.Wavelet.Continuous.CWDOpts n)
instance GHC.Show.Show (Numeric.Wavelet.Continuous.CWDOpts n)
instance GHC.Generics.Generic Numeric.Wavelet.Continuous.LNorm
instance GHC.Enum.Bounded Numeric.Wavelet.Continuous.LNorm
instance GHC.Enum.Enum Numeric.Wavelet.Continuous.LNorm
instance GHC.Classes.Ord Numeric.Wavelet.Continuous.LNorm
instance GHC.Classes.Eq Numeric.Wavelet.Continuous.LNorm
instance GHC.Show.Show Numeric.Wavelet.Continuous.LNorm
instance GHC.Base.Functor v => GHC.Base.Functor (Numeric.Wavelet.Continuous.CWD v n m a)
instance (GHC.Show.Show a, GHC.Show.Show (v b)) => GHC.Show.Show (Numeric.Wavelet.Continuous.CWD v n m a b)
instance GHC.Base.Functor v => GHC.Base.Functor (Numeric.Wavelet.Continuous.CWDLine v n a)
instance (GHC.Show.Show a, GHC.Show.Show (v b)) => GHC.Show.Show (Numeric.Wavelet.Continuous.CWDLine v n a b)
